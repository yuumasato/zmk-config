/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define XCHARS  1
#define NAV     2
#define ADJUST  3

&mt {
    tapping-term-ms= <120>;
};

/ {
	behaviors {
		yht: y_hold_tap {
		compatible = "zmk,behavior-hold-tap";
		label = "Y_HOLD_TAP";
		#binding-cells = <2>;
		flavor = "hold-preferred";
		tapping-term-ms = <220>;
		quick-tap-ms = <200>;
		bindings = <&mo>, <&kp>;
		};
	};
	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |  ESC |
// | LCTRL |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   | RALT |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT |   ESC   |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | SHFT |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp TAB   &kp Q &kp W    &kp E     &kp R    &kp T                                            &kp Y &kp U  &kp I     &kp O   &kp P    &kp ESC
	&kp LCTRL &kp A &kp S    &kp D     &kp F    &kp G                                            &kp H &kp J  &kp K     &kp L   &kp SEMI &kp RALT
	&kp LSHFT &kp Z &kp X    &kp C     &kp V    &kp B &kp LSHFT   &kp ESC     &kp LSHFT &kp LGUI &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                    &kp LGUI &kp LCTRL &kp LALT &yht XCHARS SPACE &kp RET     &kp LGUI  &yht NAV BSPC &mt LCTRL TAB &kp LALT &kp RGUI
			>;

		};

		xchar_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  1  |  2  |  3   |  4   |  5   |                                          |  6   |  7    |  8    |  9   |  0    |      |
// |       |     |     |      |      |      |                                          | - _  | = +   |       | [ {  | ] }   |      |
// |       |     |     |      |      |      |         |         |  |         |         | ' "  | ` ~   |       |      | \ |   |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans &kp N1 &kp N2 &kp N3 &kp N4 &kp N5                                         &kp N6    &kp N7    &kp N8 &kp N9   &kp N0   &trans
	&trans &trans &trans &trans &trans &trans                                         &kp MINUS &kp EQUAL &none  &kp LBKT &kp RBKT &trans
	&trans &trans &trans &trans &trans &trans &trans &trans             &trans &trans &kp APOS  &kp GRAVE &none  &kp DOT  &kp BSLH &trans
                         &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans
			>;

		};

		nav_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |     |      |      |      |      |                                          | Home | PgDn  | PgUp  | End  | Del   |      |
// |       |     |CtrPgU|AltTab|CtrPgD|      |                                          | Left | Down  | Up    | Right| Ins   |      |
// |       |     |      |      |      |      |         |         |  |         |         |      |       |       |      | PSCR  |      |
//                      |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans &trans &trans &trans &trans &trans                                         &kp HOME &kp PG_DN &kp PG_UP &kp END   &kp DEL   &trans
	&trans &trans &kp LC(PG_UP) &kp LA(TAB) &kp LC(PG_DN) &trans                      &kp LEFT &kp DOWN  &kp UP    &kp RIGHT &kp INS   &trans
	&trans &trans &trans &trans &trans &trans &trans &trans             &trans &trans &trans   &trans    &trans    &trans    &kp PSCRN &trans
                         &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans
			>;

		};

		adjust_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |       |  F1 |  F2 |  F3  |  F4  |  F5  |                                          |  F6  |  F7   |  F8   |  F9  |  F10  |      |
// |       |     |     |      |      |      |                                          |      |       |       |  F11 |  F12  |      |
// |       |     |     |      |      |      |         |         |  |         |         |      |       |       |      |       |      |
//                     |      |      |      |         |         |  |         |         |      |       |       |
			bindings = <
	&trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5                                         &kp F6 &kp F7 &kp F8 &kp F9  &kp F10 &trans
	&trans &trans &trans &trans &trans &trans                                         &trans &trans &trans &kp F11 &kp F12 &trans
	&trans &trans &trans &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans &trans  &trans  &trans
                         &trans &trans &trans &trans &trans             &trans &trans &trans &trans &trans
			>;

		};
	};

	conditional_layers {
		compatible = "zmk,conditional-layers";
		tri_layer {
			if-layers = <1 2>;
			then-layer = <3>;
		};
	};

};
